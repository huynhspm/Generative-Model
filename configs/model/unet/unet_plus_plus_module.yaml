_target_: src.models.unet.UNetModule

use_ema: true

optimizer:
  _target_: torch.optim.Adam
  _partial_: true
  lr: 0.005
  weight_decay: 0.0

scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  _partial_: true
  gamma: 0.95

net:
  _target_: src.models.unet.net.UNetPlusPlus

  in_channels: 1
  out_channels: 1
  number_unet: 4
  base_channels: 64
  conv_layer: Conv2d
  norm_layer: InstanceNorm2d
  activate_layer: LeakyReLU
  transpconv_layer: ConvTranspose2d
  conv_kwargs:
    kernel_size: 3
    padding: 1
  norm_kwargs:
    eps: 1e-05
    affine: true
  activate_kwargs:
    negative_slope: 0.01
    inplace: true
  transpconv_kwargs:
    stride: 2
    kernel_size: 2
    bias: false

criterion:
  # Dice Loss
  _target_: segmentation_models_pytorch.losses.DiceLoss
  mode: binary

  # BCE Loss for binary-class or multi-label
  # _target_: segmentation_models_pytorch.losses.SoftBCEWithLogitsLoss
  # pos_weights: 

  # CE Loss for multi-class
  # _target_: segmentation_models_pytorch.losses.SoftCrossEntropyLoss
  # _target_: torch.nn.CrossEntropyLoss
  # weights: