# @package _global_

# to execute this experiment run:
# python src/train.py experiment=segmentation/stable_diffusion/train/lidc

defaults:
  - override /data: lidc.yaml
  - override /model: diffusion/stable_diffusion_module.yaml
  - override /callbacks: segmentation.yaml
  - override /trainer: ddp.yaml
  - override /logger: wandb.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345

task_name: "train_segmentation_diffusion"

trainer:
  max_epochs: 700
  devices: 1
  check_val_every_n_epoch: 5
  gradient_clip_val: 1.0

data:
  batch_size: 16
  num_workers: 10
  image_size: 128

model:
  optimizer:
    lr: 2.0e-05
  net:
    img_dims:
      - 1
      - 32
      - 32
    denoise_net:
      channels: 128
      channel_multipliers: [1, 2, 4, 4]
      d_cond_image: ${model.net.image_embedder.d_embed}
    image_embedder:
      _target_: src.models.components.embeds.ImageEmbedder
      in_channels: 1
      d_embed: 1
      channel_multipliers: [1, 2, 4]
    autoencoder_weight_path: null

logger:
  wandb:
    name: "${now:%Y-%m-%d}_${now:%H-%M-%S}"
    project: "segmentation-diffusion"
    tags: ${tags}
    group: ${data.dataset_name}
    id: null # pass correct id to resume experiment! (if ckpt_path is not null)

ckpt_path: null # simply provide checkpoint path to resume training

callbacks:
  gen_sample:
    grid_shape: [5, 5]
