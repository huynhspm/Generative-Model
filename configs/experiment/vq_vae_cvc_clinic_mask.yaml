# @package _global_

# to execute this experiment run:
# python train.py experiment=vq_vae_cvc_clinic_mask

defaults:
  - override /data: cvc_clinic.yaml
  - override /model: vae/vq_vae_module.yaml
  - override /callbacks: vae.yaml
  - override /trainer: ddp.yaml
  - override /logger: wandb.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345

task_name: "train_vae"

trainer:
  max_epochs: 50
  devices: 1
  check_val_every_n_epoch: 5

data:
  batch_size: 8
  num_workers: 10
  image_size: 256

model:
  net:
    # encode 1x256x256 to 1x64x64
    img_dims:
      - 1
      - ${data.transform_val.transforms[0].height}
      - ${data.transform_val.transforms[0].width}
    z_channels: 1
    channels: 64

logger:
  wandb:
    name: "${now:%Y-%m-%d}_${now:%H-%M-%S}"
    project: "vae"
    tags: ${tags}
    group: ${data.dataset_name}
    id: null # pass correct id to resume experiment! (if ckpt_path is not null)

ckpt_path: null # simply provide checkpoint path to resume training

callbacks:
  gen_sample:
    grid_shape: [5, 5]
  metrics:
    dice:
      _target_: torchmetrics.Dice
      threshold: 0.5
      average: micro
    iou:
      _target_: torchmetrics.JaccardIndex
      threshold: 0.5
      average: micro
      task: binary
